<?php

namespace app\models\ar;

use Yii;

/**
 * This is the model class for table "zc_station".
 *
 * @property int $id 工位id
 * @property string $name 工位名称
 * @property string $code 工位编码
 * @property int $pid 上一工位id
 * @property int $sort 工位位置
 * @property int $work_area_id 产线ID
 * @property int $workshop_id 车间id
 * @property int $is_deleted 是否删除
 * @property int $create_time
 * @property int $update_time
 */
class StationAR extends \app\models\ar\BaseAR
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'zc_station';
    }

    /**
     * 场景
     * @return array
     * @author: liuFangShuo
     */
    public function scenarios()
    {
        $parent = parent::scenarios();
        $self = [
            'create' => ['name', 'code', 'pid', 'work_area_id', 'workshop_id'],
            'update' => ['name', 'code', 'pid', 'work_area_id', 'workshop_id'],
        ];

        return  array_merge($parent,$self); // TODO: Change the autogenerated stub
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['pid', 'work_area_id', 'workshop_id'], 'required', 'on' => 'default'],
            [['pid', 'sort', 'work_area_id', 'workshop_id', 'is_deleted'], 'integer', 'on' => 'default'],
            [['name', 'code'], 'string', 'max' => 64, 'on' => ['default', 'create', 'update']],
            [['name', 'code', 'work_area_id', 'workshop_id'], 'required', 'message' => '不能为空', 'on' => ['create','update']],
            ['work_area_id', 'compare', 'compareValue' => 0, 'operator' => '>', 'message' =>'请先选择产线', 'on' => ['create','update']],
            ['workshop_id', 'compare', 'compareValue' => 0,  'operator' => '>', 'message' => '请先选择车间', 'on' => ['create','update']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Name',
            'code' => 'Code',
            'pid' => 'Pid',
            'sort' => 'Sort',
            'work_area_id' => 'Work Area ID',
            'workshop_id' => 'Workshop ID',
            'is_deleted' => 'Is Deleted',
            'create_time' => 'Create Time',
            'update_time' => 'Update Time',
        ];
    }

    /**
     * 保存工位
     * @author: liuFangShuo
     */
    public function saveStation()
    {

        //查找一下
        $model = static::findOne(['work_area_id' => $this->work_area_id,'code' => $this->code, 'is_deleted' => STATUS_FALSE]);

        //创建时必须不能存在
        if($this->getScenario() == 'create' && !empty($model)){
            $this->addError('code', '该产线工位编号已存在');
            return false;
        }

        //更新时必须存在
        if($this->getScenario() == 'update' && empty($model)){
            $this->addError('name', '该产线工位不存在');
            return false;
        }

        if(empty($model)){
            $model = new static();
        }

        //查找一下上一级车间
        if(!empty($this->pid)){
            $pStation = static::findOne(['id' => $this->pid, 'is_deleted' => STATUS_FALSE]);
            $model->sort = $pStation->sort + 1;
            $model->pid = $this->pid;
        } else {
            $model->sort = 1;
            $model->pid = 0;
        }

        $model->name = $this->name;
        $model->code = $this->code;
        $model->workshop_id = $this->workshop_id;
        $model->work_area_id = $this->work_area_id;


        if(!$model->save(false)){
            $this->addError('code', '网络问题，稍后重试');
            return false;
        } else {
            return true;
        }
    }
}
