<?php
/**
 * Created by liuFangShuo.
 * User: lfs
 * Date: 2018/2/22
 * Time: 11:09
 */

namespace app\models;
use app\models\ar\WorkshopAR;
use Yii;
use yii\base\Model;

class WorkshopForm extends Model
{
    public $name;
    public $code;
    public $pid;
    public $sort;


    public function scenarios()
    {
        $parent = parent::scenarios();
        $self = [
            'create' => ['name', 'code', 'pid', 'sort'],
            'update' => ['name', 'code', 'pid', 'sort'],
        ];

        return  array_merge($parent,$self); // TODO: Change the autogenerated stub
    }

    /**
     * @return array the validation rules.
     */
    public function rules()
    {
        return [
            // name, email, subject and body are required
            [['name', 'code', 'pid'], 'required', 'message' => '不能为空', 'on' =>['create', 'update']],
        ];
    }

    /**
     * 保存车间信息
     * @author: liuFangShuo
     */
    public function saveWorkshop()
    {
        //查找一下
        $model = WorkshopAR::findOne(['code' => $this->code, 'is_deleted' => STATUS_FALSE]);

        //创建时必须不能存在
        if($this->getScenario() == 'create' && !empty($model)){
            $this->addError('code', '车间编号已存在');
            return false;
        }

        //更新时必须存在
        if($this->scenarios() == 'update' && empty($model)){
            $this->addError('name', '车间不存在');
            return false;
        }

        if(empty($model)){
            $model = new WorkshopAR();
            $model->create_time = time();
        }

        //查找一下上一级车间
        $pws = WorkshopAR::findOne(['id' => $this->pid, 'is_deleted' => STATUS_FALSE]);

        $model->name = $this->name;
        $model->code = $this->code;
        $model->pid = $this->pid;
        $model->sort = $pws->sort + 1;
        $model->update_time = time();

        if(!$model->save(false)){
            $this->addError('code', '网络问题，稍后重试');
            return false;
        } else {
            return true;
        }
    }

    public function getAttrInfos($id)
    {
        $workshop = WorkshopAR::findOne(['id' => $id, 'is_deleted' => STATUS_FALSE]);
        if (empty($workshop)) {
            return false;
        } else {
            $this->name = $workshop->name;
            $this->code = $workshop->code;
            $this->pid = $workshop->pid;
            $this->sort = $workshop->sort;

            return true;
        }
    }
}